apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dc-crawler-worker-{{ .Values.liveDirectory.galleryKind }}
  labels:
    app: dc-crawler-worker-{{ .Values.liveDirectory.galleryKind }}
spec:
  podManagementPolicy: Parallel
  replicas: {{ .Values.worker.replicas }}
  selector:
    matchLabels:
      app: dc-crawler-worker-{{ .Values.liveDirectory.galleryKind }}
  serviceName: dc-crawler-worker-{{ .Values.liveDirectory.galleryKind }}
  template:
    metadata:
      labels:
        app: dc-crawler-worker-{{ .Values.liveDirectory.galleryKind }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8080'
    spec:
      containers:
      - name: worker
        image: {{ .Values.worker.image }}
        env:
        - name: LIVE_DIRECTORY_URL
          value: "http://dc-crawler-live-dir-{{ .Values.liveDirectory.galleryKind }}:8080"
        - name: TOTAL
          value: {{ .Values.worker.replicas | quote }}
        - name: DATA_BROKER_URL
          value: "http://dc-crawler-data-broker-{{ .Values.liveDirectory.galleryKind }}:8080"
        - name: DELAY
          value: {{ .Values.worker.delay | quote }}
        - name: SLEEP_DURATION
          value: {{ .Values.worker.sleepDuration | quote }}
        - name: RUST_LOG
          value: "INFO,html5ever::tree_builder=ERROR"
        command: ["sh", "-c", 'PART=${HOSTNAME##*-} worker']
        ports:
        - containerPort: 8080
        {{- if .Values.worker.resources }}
        resources:
{{ toYaml .Values.worker.resources | indent 10 }}
        {{- end }}
      nodeSelector:
{{ toYaml .Values.worker.nodeSelector | indent 8 }}
      {{- if .Values.worker.distribute }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "app"
                  operator: In
                  values: [ "dc-crawler-worker-{{ .Values.liveDirectory.galleryKind }}" ]
              topologyKey: "kubernetes.io/hostname"
        {{- end }}

---

apiVersion: "v1"
kind: "Service"
metadata:
  labels:
    app: dc-crawler-worker-{{ .Values.liveDirectory.galleryKind }}
  name: dc-crawler-worker-{{ .Values.liveDirectory.galleryKind }}
spec:
  ports:
    - port: 8080
  selector:
    app: dc-crawler-worker-{{ .Values.liveDirectory.galleryKind }}
  type: ClusterIP
  clusterIP: None
