environments:
  dev:
    secrets:
    - "envs/{{ .Environment.Name }}/data-access-secrets.yaml"
    values:
    - "envs/values.yaml"
    - "envs/{{ .Environment.Name }}/values.yaml.gotmpl"
    - "envs/{{ .Environment.Name }}/images.yaml"

repositories:
- name: argo
  url: "https://argoproj.github.io/argo-helm"
- name: jupyterhub
  url: "https://jupyterhub.github.io/helm-chart/"

  #- name: argo
  #url: "https://argoproj.github.io/argo-helm"
  #- name: grafana
  #$url: "https://grafana.github.io/helm-charts"
  #- name: jupyterhub
  #url: "https://jupyterhub.github.io/helm-chart/"

helmDefaults:
  wait: true
  timeout: 60
  atomic: true
  cleanupOnFail: false
  kubeContext: {{ requiredEnv "KUBE_CONTEXT" }}

commonLabels:
  apps: cg

releases:
- name: data-access-secrets
  chart: charts/data-access-secrets
  values:
  - secrets: 
{{ toYaml .Values.dataAccessSecrets | indent 6 }}
- name: dcinside-crawler
  chart: charts/dcinside-crawler
  values:
  - dataBroker:
      bucket: datalake-cg
      prefix: datalake/json/dcinside/document/
      nodeSelector:
        cloud.google.com/gke-nodepool: default-pool
      resources:
        requests:
          memory: "100Mi"
          cpu: "50m"
    worker:
      image: {{ index .Values.images "dcinside-crawler" }}
      replicas: 8
      nodeSelector:
        cloud.google.com/gke-nodepool: pvm-e2-micro-pool
      resources:
        requests:
          memory: "10Mi"
          cpu: "50m"
    liveDirectory:
      image: {{ index .Values.images "dcinside-crawler" }}
      nodeSelector:
        cloud.google.com/gke-nodepool: default-pool
      resources:
        requests:
          memory: "100Mi"
          cpu: "20m"
- name: argo
  chart: argo/argo
  version: 0.14.0
  needs: [ argo-suppliment ]
  values:
  - singleNamespace: true
  - useDefaultArtifactRepo: true
  - artifactRepository:
      archiveLogs: true
      gcs:
        bucket: datalake-cg
        keyFormat: argo/artifacts/
        serviceAccountKeySecret:
          name: data-access
          key: "service-account.json"
  - controller:
      workflowDefaults:
        spec:
          serviceAccountName: 'argo-workflow'
          volumes:
          - name: 'data-access-secrets'
            secret: 
              secretName: 'data-access'
              defaultMode: 256
      nodeSelector:
        cloud.google.com/gke-nodepool: default-pool
- name: argo-suppliment
  chart: charts/argo-suppliment
  values:
  - serviceAccountName: argo-workflow
- name: jupyterhub
  chart: 
- name: etl
  chart: charts/etl
  values:
  - images:
{{ toYaml .Values.images | indent 6 }}
- name: jupyterhub
  chart: jupyterhub/jupyterhub
  version: 0.10.6
  values:
  - dummy:
    {{- if .Values.jupyterhub.ingress.host }}
    ingress:
      enabled: true
      hosts: [ {{ .Values.jupyterhub.ingress.host }} ]
      pathSuffix: "*"
      annotations:
        kubernetes.io/ingress.class: alb
        alb.ingress.kubernetes.io/group.name: sa-kube-default-ingress
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/healthcheck-path: "/health"
    {{- end }}
{{ toYaml (omit .Values.jupyterhub "ingress" ) | indent 4 }}
